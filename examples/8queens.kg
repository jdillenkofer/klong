extern printf: (ptr<i8>, ...) -> void;

pub fun main() -> i32 {
    let board: [i32, 64];
    for (let i = 0; i < 64; i = i + 1) {
        board[i] = 0;
    }
    if (!solve(board, 0)) {
        return 1;
    }
    return 0;
}

fun solve(board: ptr<i32>, row: i32) -> bool {
    if (row == 8) {
        print_board(board);
        return false;
    }
    for (let i = 0; i < 8; i = i + 1) {
        if (!conflict(board, row, i)) {
            board[row * 8 + i] = 1;
            solve(board, row + 1);
            board[row * 8 + i] = 0;
        }
    }
    return true;
}

fun print_board(board: ptr<i32>) -> void {
    for (let i = 0; i < 8; i = i + 1) {
        for (let j = 0; j < 8; j = j + 1) {
            if (board[i * 8 + j] == 1) {
                printf("Q ");
            } else {
                printf(". ");
            }
        }
        printf("\n");
    }
    printf("\n\n");
}

fun conflict(board: ptr<i32>, row: i32, col: i32) -> bool {
    for (let i = 0; i < row; i = i + 1) {
        if (board[i * 8 + col] == 1) {
            return true;
        }
        let j = row - i;
        if (0 < col - j + 1) {
            if (board[i * 8 + col - j] == 1) {
                return true;
            }
        }
        if (col + j < 8) {
            if (board[i * 8 + col + j] == 1) {
                return true;
            }
        }
    }
    return false;
}